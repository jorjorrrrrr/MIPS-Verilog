####################################################
# Pattern 8 : Bubble Sort
# 
# void swap(int v[], int k) {
# 	int temp;
# 	temp = v[k];
# 	v[k] = v[k+1];
# 	v[k+1] = temp;
# }

# void sort (int v[], int n) {
# 	int i, j;
# 	for (i = 0; i < n; i += 1) {
# 		for (j = i-1; j >= 0 && v[j] > v[j+1]; j -= 1) {
# 			swap(v, j);
# 		}
# 	}
# }
#
#################################################

.data
    pass_msg:    	.asciiz " pass\n"
    fail_msg:     	.asciiz " fail\n"
    allpass_msg:   	.asciiz "        ____________________\n       |                    |\n       |     ALL  PASS!      |\n       |____________________|\n            \\  ||  /\n             \\ || /\n              \\||/\n         /\\_/\\  ||\n        ( o.o ) ||\n        (> ^ <)//\n"
    tryagain_msg:  	.asciiz "        ____________________\n       |                    |\n       |     TRY  AGAIN!     |\n       |____________________|\n            \\  ||  /\n             \\ || /\n              \\||/\n         /\\_/\\  ||\n        ( o.o ) ||\n        (> ^ <)//\n"  
	test1_msg:		.asciiz "test1 pass!\n"
	test2_msg:		.asciiz "test2 pass!\n"
	test3_msg:		.asciiz "test3 pass!\n"
	test4_msg:		.asciiz "test4 pass!\n"
	test5_msg:		.asciiz "test5 pass!\n"
	test6_msg:		.asciiz "test6 pass!\n"
	test7_msg:		.asciiz "test7 pass!\n"
	test8_msg:		.asciiz "test8 pass!\n"
	test9_msg:		.asciiz "test9 pass!\n"
	test10_msg:		.asciiz "test10 pass!\n"
	pattern1:       .word 0x00000041, 0x223e3c4a, 0x055b3aa0, 0x5010f241, 0x1648b7d6, 0x7f98b9c6, 0x06b5ebed, 0x40818dc2, 0x56526852, 0x4170fe26, 0x16abd066, 0x39dbc750, 0x73ae90bb, 0x0a825536, 0x77090039, 0x33a5104e, 0x35a06cba, 0x2da9647c, 0x5c245193, 0x24ec2080, 0x33214aa2, 0x6c60b937, 0x0b2a9363, 0x25cb215c, 0x13b343db, 0x0dd046c4, 0x0b6b8abd, 0x25450ea2, 0x42dfd927, 0x1d898544, 0x64bf63f1, 0x2e2aa4f5, 0x02f1bd0f, 0x63815652, 0x73fa08ea, 0x2778cbde, 0x62a1c19c, 0x4dde9025, 0x568099d7, 0x45510400, 0x05a324d0, 0x12c2edad, 0x66e1a793, 0x3095c225, 0x040eb68e, 0x5d56765a, 0x2ff88767, 0x4348d032, 0x269611a9, 0x5f5bc20b, 0x5682f24a, 0x1a97e27e, 0x3bcd0b8d, 0x5c3a9921, 0x00cc687d, 0x735c8002, 0x07e40fcc, 0x03c3ce52, 0x174aa25f, 0x3c3143fb, 0x72a5974c, 0x28b085e1, 0x3a834a5d, 0x33634730, 0x76a583b6, 0x40a5fa46
	answer1:        .word 0x00cc687d, 0x02f1bd0f, 0x03c3ce52, 0x040eb68e, 0x055b3aa0, 0x05a324d0, 0x06b5ebed, 0x07e40fcc, 0x0a825536, 0x0b2a9363, 0x0b6b8abd, 0x0dd046c4, 0x12c2edad, 0x13b343db, 0x1648b7d6, 0x16abd066, 0x174aa25f, 0x1a97e27e, 0x1d898544, 0x223e3c4a, 0x24ec2080, 0x25450ea2, 0x25cb215c, 0x269611a9, 0x2778cbde, 0x28b085e1, 0x2da9647c, 0x2e2aa4f5, 0x2ff88767, 0x3095c225, 0x33214aa2, 0x33634730, 0x33a5104e, 0x35a06cba, 0x39dbc750, 0x3a834a5d, 0x3bcd0b8d, 0x3c3143fb, 0x40818dc2, 0x40a5fa46, 0x4170fe26, 0x42dfd927, 0x4348d032, 0x45510400, 0x4dde9025, 0x5010f241, 0x56526852, 0x568099d7, 0x5682f24a, 0x5c245193, 0x5c3a9921, 0x5d56765a, 0x5f5bc20b, 0x62a1c19c, 0x63815652, 0x64bf63f1, 0x66e1a793, 0x6c60b937, 0x72a5974c, 0x735c8002, 0x73ae90bb, 0x73fa08ea, 0x76a583b6, 0x77090039, 0x7f98b9c6
	pattern2:       .word 0x00000050, 0x40892600, 0x6621014e, 0x10d2de23, 0x19e88497, 0x6fae16ac, 0x50f494ce, 0x1bd11963, 0x058aaece, 0x3fa847e5, 0x0efdb205, 0x32eb3ad2, 0x2fd120ed, 0x076d4c61, 0x47665dfb, 0x08acd071, 0x73d2bb9e, 0x14b18223, 0x071e752c, 0x23739e43, 0x7d54abbb, 0x584a5b66, 0x0a1bf64b, 0x7139d719, 0x4b37485e, 0x3ca8cdf9, 0x0a5c2e46, 0x047773a6, 0x7f193e94, 0x57aa44cf, 0x73387c5c, 0x4f9e390e, 0x4871d796, 0x123cc6f5, 0x453842a6, 0x1fd8e2f9, 0x3899938d, 0x0ce53c06, 0x3db514d4, 0x46983c06, 0x2e6cd4cf, 0x4783bfb4, 0x5a764ae1, 0x30b976f9, 0x2e9a7185, 0x5085441a, 0x359192d2, 0x37bcb1e2, 0x32bf8084, 0x74176af6, 0x65a76a98, 0x1ffd0751, 0x2af0a8e6, 0x26fc933d, 0x56bd2c10, 0x539c29b1, 0x0db90bca, 0x69e1c8b2, 0x324927bd, 0x7169acc4, 0x10712c10, 0x0317062e, 0x58d935b1, 0x656324c5, 0x3d0c8ed0, 0x299f3b88, 0x2aa62ce1, 0x707d2fbb, 0x3ca77746, 0x33317834, 0x71b03318, 0x72227d18, 0x0f750c43, 0x51d6e443, 0x603ec907, 0x6244bf5a, 0x71842555, 0x2f1cb948, 0x120adf57, 0x7b26da88, 0x51a84665
	answer2:        .word 0x0317062e, 0x047773a6, 0x058aaece, 0x071e752c, 0x076d4c61, 0x08acd071, 0x0a1bf64b, 0x0a5c2e46, 0x0ce53c06, 0x0db90bca, 0x0efdb205, 0x0f750c43, 0x10712c10, 0x10d2de23, 0x120adf57, 0x123cc6f5, 0x14b18223, 0x19e88497, 0x1bd11963, 0x1fd8e2f9, 0x1ffd0751, 0x23739e43, 0x26fc933d, 0x299f3b88, 0x2aa62ce1, 0x2af0a8e6, 0x2e6cd4cf, 0x2e9a7185, 0x2f1cb948, 0x2fd120ed, 0x30b976f9, 0x324927bd, 0x32bf8084, 0x32eb3ad2, 0x33317834, 0x359192d2, 0x37bcb1e2, 0x3899938d, 0x3ca77746, 0x3ca8cdf9, 0x3d0c8ed0, 0x3db514d4, 0x3fa847e5, 0x40892600, 0x453842a6, 0x46983c06, 0x47665dfb, 0x4783bfb4, 0x4871d796, 0x4b37485e, 0x4f9e390e, 0x5085441a, 0x50f494ce, 0x51a84665, 0x51d6e443, 0x539c29b1, 0x56bd2c10, 0x57aa44cf, 0x584a5b66, 0x58d935b1, 0x5a764ae1, 0x603ec907, 0x6244bf5a, 0x656324c5, 0x65a76a98, 0x6621014e, 0x69e1c8b2, 0x6fae16ac, 0x707d2fbb, 0x7139d719, 0x7169acc4, 0x71842555, 0x71b03318, 0x72227d18, 0x73387c5c, 0x73d2bb9e, 0x74176af6, 0x7b26da88, 0x7d54abbb, 0x7f193e94
	pattern3:       .word 0x0000005d, 0x3bd0ef22, 0x3ddf6458, 0x02360a3b, 0x6435c05b, 0x38a57c33, 0x514a3b2a, 0x3f6597c6, 0x4a724a56, 0x258bad4a, 0x7c4ea6a3, 0x27cff8f6, 0x0e98c575, 0x186ac57c, 0x0a9e70bb, 0x016566bd, 0x664668dc, 0x4ed3534b, 0x009c147b, 0x243fb5d7, 0x031f38d1, 0x4d875451, 0x6c49914e, 0x3f9a7b8a, 0x45d403ee, 0x39f82f18, 0x604f9146, 0x7bee3f1a, 0x3fa1d5f8, 0x7e6114eb, 0x024d9b8c, 0x151b30d5, 0x270bae9d, 0x4a4e0c48, 0x09580aca, 0x49be5baa, 0x723fd6f9, 0x2322034f, 0x7c34b910, 0x674a2112, 0x7b3b164b, 0x49c03dca, 0x57a509b0, 0x17fd0a5e, 0x04cb30b6, 0x44397dfa, 0x63b14521, 0x5153cf07, 0x43be5ab5, 0x4d083e13, 0x0df2d944, 0x44cc8608, 0x34871416, 0x0b74b546, 0x4d8151f7, 0x40d547df, 0x099bb3a3, 0x1cd967ca, 0x476fcde0, 0x5ee0f3e8, 0x68fbb56e, 0x77641585, 0x29e78c44, 0x4c4bf332, 0x31c5feb1, 0x7a6e4113, 0x0df78915, 0x15076adc, 0x7a09e085, 0x2016a3b8, 0x5a4cb7f1, 0x542028a5, 0x1dd1c94c, 0x738d785e, 0x4bd4daa3, 0x5693a8fd, 0x70a8229d, 0x40f85c77, 0x57fb5ed0, 0x32944f62, 0x24dee96f, 0x5ddc796a, 0x7495a855, 0x6d4b6467, 0x62522d76, 0x1d0dd2b7, 0x0071ed21, 0x07ea1e2c, 0x5a7054f0, 0x3665e864, 0x3e52c2d5, 0x31b67824, 0x7622ecea, 0x77a0ae8f
	answer3:        .word 0x0071ed21, 0x009c147b, 0x016566bd, 0x02360a3b, 0x024d9b8c, 0x031f38d1, 0x04cb30b6, 0x07ea1e2c, 0x09580aca, 0x099bb3a3, 0x0a9e70bb, 0x0b74b546, 0x0df2d944, 0x0df78915, 0x0e98c575, 0x15076adc, 0x151b30d5, 0x17fd0a5e, 0x186ac57c, 0x1cd967ca, 0x1d0dd2b7, 0x1dd1c94c, 0x2016a3b8, 0x2322034f, 0x243fb5d7, 0x24dee96f, 0x258bad4a, 0x270bae9d, 0x27cff8f6, 0x29e78c44, 0x31b67824, 0x31c5feb1, 0x32944f62, 0x34871416, 0x3665e864, 0x38a57c33, 0x39f82f18, 0x3bd0ef22, 0x3ddf6458, 0x3e52c2d5, 0x3f6597c6, 0x3f9a7b8a, 0x3fa1d5f8, 0x40d547df, 0x40f85c77, 0x43be5ab5, 0x44397dfa, 0x44cc8608, 0x45d403ee, 0x476fcde0, 0x49be5baa, 0x49c03dca, 0x4a4e0c48, 0x4a724a56, 0x4bd4daa3, 0x4c4bf332, 0x4d083e13, 0x4d8151f7, 0x4d875451, 0x4ed3534b, 0x514a3b2a, 0x5153cf07, 0x542028a5, 0x5693a8fd, 0x57a509b0, 0x57fb5ed0, 0x5a4cb7f1, 0x5a7054f0, 0x5ddc796a, 0x5ee0f3e8, 0x604f9146, 0x62522d76, 0x63b14521, 0x6435c05b, 0x664668dc, 0x674a2112, 0x68fbb56e, 0x6c49914e, 0x6d4b6467, 0x70a8229d, 0x723fd6f9, 0x738d785e, 0x7495a855, 0x7622ecea, 0x77641585, 0x77a0ae8f, 0x7a09e085, 0x7a6e4113, 0x7b3b164b, 0x7bee3f1a, 0x7c34b910, 0x7c4ea6a3, 0x7e6114eb
	pattern4:       .word 0x00000038, 0x5745ae5f, 0x243aefb6, 0x2ca3fca5, 0x74df7e1b, 0x41d31974, 0x76d25126, 0x7a3b7392, 0x1d2ed5b2, 0x28db5176, 0x43e059f1, 0x671e8a86, 0x4bf3a33b, 0x702e212d, 0x652e5ac2, 0x0cbeb3ce, 0x0d68b3d2, 0x4e7b45c3, 0x5cf70c9e, 0x12628ad9, 0x13b85f7d, 0x46ac5c32, 0x62a256c4, 0x3b8cbb5e, 0x0de8fec8, 0x6de91192, 0x58593f5f, 0x085de451, 0x10bb7bdb, 0x0ea1890b, 0x20d03cc5, 0x179a0159, 0x1d97bdad, 0x61c17c9a, 0x3b631e1b, 0x50b56086, 0x0f9f089a, 0x32fb1d0c, 0x17c74dc1, 0x3f354259, 0x782dc186, 0x138566bb, 0x27f81812, 0x6ecf50b4, 0x5da0f9ed, 0x7f2cf1d3, 0x4d22943b, 0x1bd235c6, 0x052400b0, 0x2e0b46b3, 0x3065c88d, 0x6c920b51, 0x43f01482, 0x6c454462, 0x623832c1, 0x439f6587, 0x7d263a8c
	answer4:        .word 0x052400b0, 0x085de451, 0x0cbeb3ce, 0x0d68b3d2, 0x0de8fec8, 0x0ea1890b, 0x0f9f089a, 0x10bb7bdb, 0x12628ad9, 0x138566bb, 0x13b85f7d, 0x179a0159, 0x17c74dc1, 0x1bd235c6, 0x1d2ed5b2, 0x1d97bdad, 0x20d03cc5, 0x243aefb6, 0x27f81812, 0x28db5176, 0x2ca3fca5, 0x2e0b46b3, 0x3065c88d, 0x32fb1d0c, 0x3b631e1b, 0x3b8cbb5e, 0x3f354259, 0x41d31974, 0x439f6587, 0x43e059f1, 0x43f01482, 0x46ac5c32, 0x4bf3a33b, 0x4d22943b, 0x4e7b45c3, 0x50b56086, 0x5745ae5f, 0x58593f5f, 0x5cf70c9e, 0x5da0f9ed, 0x61c17c9a, 0x623832c1, 0x62a256c4, 0x652e5ac2, 0x671e8a86, 0x6c454462, 0x6c920b51, 0x6de91192, 0x6ecf50b4, 0x702e212d, 0x74df7e1b, 0x76d25126, 0x782dc186, 0x7a3b7392, 0x7d263a8c, 0x7f2cf1d3
	pattern5:       .word 0x00000032, 0x31c6937b, 0x38ffc3e3, 0x13cb39f7, 0x154bd0a9, 0x0287023e, 0x4733c0a4, 0x25e36360, 0x5f9c66a5, 0x5fd32ca6, 0x28d56a31, 0x5314e715, 0x76e5ee50, 0x31778bb5, 0x3a2f26e4, 0x689b27c0, 0x064f1f1b, 0x2559f149, 0x717b2da0, 0x33a13d0d, 0x283869b3, 0x04ad763c, 0x19b894f4, 0x1a9e7d2f, 0x590d86ae, 0x7ff675b8, 0x671f6268, 0x13035dec, 0x0c30e81d, 0x58baee21, 0x20340fe3, 0x7261e0c7, 0x700a7693, 0x7751cc34, 0x7fd7bcf2, 0x338dcec8, 0x226cd0f3, 0x3df127bf, 0x2579a862, 0x2063555c, 0x6883b5b4, 0x7a5f7d7a, 0x0f2cb273, 0x31bfb06b, 0x3092b0b4, 0x1624c4e3, 0x08768ffd, 0x7c87f712, 0x2182d10d, 0x023bff6c, 0x75d3261c
	answer5:        .word 0x023bff6c, 0x0287023e, 0x04ad763c, 0x064f1f1b, 0x08768ffd, 0x0c30e81d, 0x0f2cb273, 0x13035dec, 0x13cb39f7, 0x154bd0a9, 0x1624c4e3, 0x19b894f4, 0x1a9e7d2f, 0x20340fe3, 0x2063555c, 0x2182d10d, 0x226cd0f3, 0x2559f149, 0x2579a862, 0x25e36360, 0x283869b3, 0x28d56a31, 0x3092b0b4, 0x31778bb5, 0x31bfb06b, 0x31c6937b, 0x338dcec8, 0x33a13d0d, 0x38ffc3e3, 0x3a2f26e4, 0x3df127bf, 0x4733c0a4, 0x5314e715, 0x58baee21, 0x590d86ae, 0x5f9c66a5, 0x5fd32ca6, 0x671f6268, 0x6883b5b4, 0x689b27c0, 0x700a7693, 0x717b2da0, 0x7261e0c7, 0x75d3261c, 0x76e5ee50, 0x7751cc34, 0x7a5f7d7a, 0x7c87f712, 0x7fd7bcf2, 0x7ff675b8
	pattern6:       .word 0x0000004e, 0x094bb35c, 0x41ce438f, 0x6a6e674d, 0x7389a558, 0x6a89b2f0, 0x214016ae, 0x63b1a24d, 0x224a1aee, 0x0c1ebb5d, 0x5bb4374f, 0x548122e5, 0x50250411, 0x7ca542f5, 0x5c07e017, 0x2de8e171, 0x797094bd, 0x31ada70c, 0x689ebdc5, 0x4a86d5ca, 0x30306a8f, 0x67180022, 0x62052b80, 0x2ebae427, 0x1b58125c, 0x4879f8b9, 0x5ced4e0b, 0x1bc34da8, 0x3673cc19, 0x67a04e2c, 0x728366f5, 0x527d0fd5, 0x1f531717, 0x06596b49, 0x18d80115, 0x1678472d, 0x680a4774, 0x48cff9c8, 0x0ebd8d06, 0x2934ab7a, 0x411dba7e, 0x23a9dd97, 0x5f38bc10, 0x6339ceb7, 0x71b2bb44, 0x6fd44d49, 0x76af8a7b, 0x56111cb4, 0x05225626, 0x35ea77f3, 0x06d7e77e, 0x59767974, 0x24da7c1a, 0x6e5c600b, 0x43d38006, 0x537dab1d, 0x163cbb21, 0x0f5caa58, 0x17756690, 0x56e66edc, 0x77632cf6, 0x08de498a, 0x59367d96, 0x59b7fe18, 0x0550bbf1, 0x7aa56dfa, 0x606d2170, 0x7606ca49, 0x0847b094, 0x77b8d15a, 0x584c51dd, 0x624258fa, 0x77b9db8c, 0x751c393a, 0x58318670, 0x224fdfea, 0x40af3273, 0x2f06e81c, 0x4594c178
	answer6:        .word 0x05225626, 0x0550bbf1, 0x06596b49, 0x06d7e77e, 0x0847b094, 0x08de498a, 0x094bb35c, 0x0c1ebb5d, 0x0ebd8d06, 0x0f5caa58, 0x163cbb21, 0x1678472d, 0x17756690, 0x18d80115, 0x1b58125c, 0x1bc34da8, 0x1f531717, 0x214016ae, 0x224a1aee, 0x224fdfea, 0x23a9dd97, 0x24da7c1a, 0x2934ab7a, 0x2de8e171, 0x2ebae427, 0x2f06e81c, 0x30306a8f, 0x31ada70c, 0x35ea77f3, 0x3673cc19, 0x40af3273, 0x411dba7e, 0x41ce438f, 0x43d38006, 0x4594c178, 0x4879f8b9, 0x48cff9c8, 0x4a86d5ca, 0x50250411, 0x527d0fd5, 0x537dab1d, 0x548122e5, 0x56111cb4, 0x56e66edc, 0x58318670, 0x584c51dd, 0x59367d96, 0x59767974, 0x59b7fe18, 0x5bb4374f, 0x5c07e017, 0x5ced4e0b, 0x5f38bc10, 0x606d2170, 0x62052b80, 0x624258fa, 0x6339ceb7, 0x63b1a24d, 0x67180022, 0x67a04e2c, 0x680a4774, 0x689ebdc5, 0x6a6e674d, 0x6a89b2f0, 0x6e5c600b, 0x6fd44d49, 0x71b2bb44, 0x728366f5, 0x7389a558, 0x751c393a, 0x7606ca49, 0x76af8a7b, 0x77632cf6, 0x77b8d15a, 0x77b9db8c, 0x797094bd, 0x7aa56dfa, 0x7ca542f5
	pattern7:       .word 0x0000003b, 0x2e9f340e, 0x1813661c, 0x035f8bf8, 0x60fc8e79, 0x68e2e98a, 0x3a1de7a2, 0x718ff216, 0x5d2f20d9, 0x7fe1624b, 0x18701218, 0x227225cc, 0x5c5934bf, 0x389230c6, 0x0fac8d56, 0x4c6887d3, 0x64bad214, 0x48f78edb, 0x7fcb61c3, 0x5e150e4c, 0x65fdc927, 0x3c54acdd, 0x430454c7, 0x73a3fccc, 0x27b4d178, 0x681a7c41, 0x62ff209a, 0x5b046fa1, 0x60696e01, 0x2a2bcc9e, 0x7db91102, 0x5c18f4be, 0x059f3e21, 0x0aa8be17, 0x5345eb2d, 0x1f3ccefc, 0x4ba76e49, 0x2814ea65, 0x2c56af1b, 0x54dcdefd, 0x2100d1f4, 0x555174b6, 0x404179f0, 0x672cac60, 0x1d9afcd5, 0x0bb4ded6, 0x12ab0f8b, 0x4a48fd5f, 0x666d3b79, 0x54a02efa, 0x6da8d095, 0x7d9636ae, 0x5e5e52bf, 0x7005189e, 0x2096b539, 0x327fbc10, 0x7253c5e7, 0x6b90b592, 0x2676524c, 0x63e927a3
	answer7:        .word 0x035f8bf8, 0x059f3e21, 0x0aa8be17, 0x0bb4ded6, 0x0fac8d56, 0x12ab0f8b, 0x1813661c, 0x18701218, 0x1d9afcd5, 0x1f3ccefc, 0x2096b539, 0x2100d1f4, 0x227225cc, 0x2676524c, 0x27b4d178, 0x2814ea65, 0x2a2bcc9e, 0x2c56af1b, 0x2e9f340e, 0x327fbc10, 0x389230c6, 0x3a1de7a2, 0x3c54acdd, 0x404179f0, 0x430454c7, 0x48f78edb, 0x4a48fd5f, 0x4ba76e49, 0x4c6887d3, 0x5345eb2d, 0x54a02efa, 0x54dcdefd, 0x555174b6, 0x5b046fa1, 0x5c18f4be, 0x5c5934bf, 0x5d2f20d9, 0x5e150e4c, 0x5e5e52bf, 0x60696e01, 0x60fc8e79, 0x62ff209a, 0x63e927a3, 0x64bad214, 0x65fdc927, 0x666d3b79, 0x672cac60, 0x681a7c41, 0x68e2e98a, 0x6b90b592, 0x6da8d095, 0x7005189e, 0x718ff216, 0x7253c5e7, 0x73a3fccc, 0x7d9636ae, 0x7db91102, 0x7fcb61c3, 0x7fe1624b
	pattern8:       .word 0x00000056, 0x1f00cab2, 0x79a551a2, 0x2affa4bc, 0x188a8edb, 0x489d225e, 0x00b902e6, 0x5366688e, 0x546f32f2, 0x730067bb, 0x13519251, 0x5340881b, 0x3c158aa7, 0x77a5ab94, 0x38b9a84b, 0x5c755421, 0x0e0935e8, 0x50b8b6ea, 0x391059fe, 0x199b64d1, 0x1d70a337, 0x3cab487d, 0x415f4774, 0x36a94af9, 0x47e18e16, 0x18a32689, 0x3f5f974f, 0x64edb414, 0x2602f41d, 0x7a160269, 0x7446626a, 0x259ec0a3, 0x0e32035f, 0x0bfc0d67, 0x4fd4a2b3, 0x4c3bd990, 0x4c0e2840, 0x6ec219f2, 0x499ec5b0, 0x653edd6c, 0x02fb286c, 0x703b64f2, 0x5274c1ba, 0x7eb3e4f4, 0x5a178485, 0x24a8b8fa, 0x316c192c, 0x0d0e4d1d, 0x01057f9c, 0x1e2c7efa, 0x68be15c5, 0x28bdef36, 0x4ddce1c7, 0x735bf746, 0x2cafec3e, 0x24cbf3b6, 0x32f6ee28, 0x23f3a5f4, 0x1b1f6ac4, 0x6d66663a, 0x2822a31f, 0x414344a2, 0x6582a733, 0x67a26850, 0x44d2896c, 0x710df375, 0x4d34b74b, 0x1462a47e, 0x630a4d70, 0x68ea97fb, 0x106a6fab, 0x5daf42ec, 0x79d922af, 0x59a070e6, 0x3d9c1dd6, 0x11bd83be, 0x5d59a05e, 0x669fb919, 0x3675e0c2, 0x7a5ab36e, 0x42688338, 0x71421802, 0x5220e58d, 0x532550a5, 0x37780f2b, 0x3264db43, 0x34d5aba2
	answer8:        .word 0x00b902e6, 0x01057f9c, 0x02fb286c, 0x0bfc0d67, 0x0d0e4d1d, 0x0e0935e8, 0x0e32035f, 0x106a6fab, 0x11bd83be, 0x13519251, 0x1462a47e, 0x188a8edb, 0x18a32689, 0x199b64d1, 0x1b1f6ac4, 0x1d70a337, 0x1e2c7efa, 0x1f00cab2, 0x23f3a5f4, 0x24a8b8fa, 0x24cbf3b6, 0x259ec0a3, 0x2602f41d, 0x2822a31f, 0x28bdef36, 0x2affa4bc, 0x2cafec3e, 0x316c192c, 0x3264db43, 0x32f6ee28, 0x34d5aba2, 0x3675e0c2, 0x36a94af9, 0x37780f2b, 0x38b9a84b, 0x391059fe, 0x3c158aa7, 0x3cab487d, 0x3d9c1dd6, 0x3f5f974f, 0x414344a2, 0x415f4774, 0x42688338, 0x44d2896c, 0x47e18e16, 0x489d225e, 0x499ec5b0, 0x4c0e2840, 0x4c3bd990, 0x4d34b74b, 0x4ddce1c7, 0x4fd4a2b3, 0x50b8b6ea, 0x5220e58d, 0x5274c1ba, 0x532550a5, 0x5340881b, 0x5366688e, 0x546f32f2, 0x59a070e6, 0x5a178485, 0x5c755421, 0x5d59a05e, 0x5daf42ec, 0x630a4d70, 0x64edb414, 0x653edd6c, 0x6582a733, 0x669fb919, 0x67a26850, 0x68be15c5, 0x68ea97fb, 0x6d66663a, 0x6ec219f2, 0x703b64f2, 0x710df375, 0x71421802, 0x730067bb, 0x735bf746, 0x7446626a, 0x77a5ab94, 0x79a551a2, 0x79d922af, 0x7a160269, 0x7a5ab36e, 0x7eb3e4f4
	pattern9:       .word 0x0000005b, 0x4a7ed378, 0x0ae3dbab, 0x75645749, 0x0f0d57ef, 0x5a838b8f, 0x2579ccef, 0x0557e61d, 0x24eaa13f, 0x5e44d412, 0x0f3a9204, 0x111c496c, 0x4ab11b1f, 0x0ef5ff15, 0x66d48d02, 0x2e9f4810, 0x7b78cc98, 0x3456d1c3, 0x663bb79b, 0x39c6997c, 0x1854e454, 0x6a170855, 0x5552427c, 0x314977e7, 0x71c9e9c0, 0x23cea54d, 0x072b707b, 0x73a019fa, 0x6559a72c, 0x5f4ada89, 0x3a67ac89, 0x1dda13f8, 0x7288e4e1, 0x2ba66bdb, 0x77ff5f06, 0x7c721af8, 0x76eda730, 0x60679360, 0x30ed7c73, 0x757e0700, 0x68e249a0, 0x648ed6a9, 0x5274c34c, 0x285555c0, 0x572e75fc, 0x653d2dc2, 0x41fa7cc2, 0x1bb15ae9, 0x1cb46d7d, 0x622c00c9, 0x596cdd64, 0x7226e5ec, 0x315af1b4, 0x5afeedf2, 0x22078a7a, 0x6994aaf3, 0x286cd9c0, 0x3a4b1a8e, 0x31762487, 0x6c4bacc0, 0x41c0a534, 0x206255fd, 0x48a68235, 0x3a86082d, 0x167555f3, 0x32958db3, 0x3de25f7e, 0x48c3b15d, 0x23ffd776, 0x53e073b0, 0x59223e8a, 0x4c34e08a, 0x3ba89d03, 0x5aedea9f, 0x720a6faa, 0x36c49638, 0x1117185d, 0x539244af, 0x786e02f5, 0x4e433719, 0x55e49464, 0x03e22741, 0x2bc7557e, 0x3797b88b, 0x32e2feda, 0x55ea4832, 0x32f48178, 0x2b82a366, 0x4514d1fd, 0x76273762, 0x1c8da15a, 0x1402b322
	answer9:        .word 0x03e22741, 0x0557e61d, 0x072b707b, 0x0ae3dbab, 0x0ef5ff15, 0x0f0d57ef, 0x0f3a9204, 0x1117185d, 0x111c496c, 0x1402b322, 0x167555f3, 0x1854e454, 0x1bb15ae9, 0x1c8da15a, 0x1cb46d7d, 0x1dda13f8, 0x206255fd, 0x22078a7a, 0x23cea54d, 0x23ffd776, 0x24eaa13f, 0x2579ccef, 0x285555c0, 0x286cd9c0, 0x2b82a366, 0x2ba66bdb, 0x2bc7557e, 0x2e9f4810, 0x30ed7c73, 0x314977e7, 0x315af1b4, 0x31762487, 0x32958db3, 0x32e2feda, 0x32f48178, 0x3456d1c3, 0x36c49638, 0x3797b88b, 0x39c6997c, 0x3a4b1a8e, 0x3a67ac89, 0x3a86082d, 0x3ba89d03, 0x3de25f7e, 0x41c0a534, 0x41fa7cc2, 0x4514d1fd, 0x48a68235, 0x48c3b15d, 0x4a7ed378, 0x4ab11b1f, 0x4c34e08a, 0x4e433719, 0x5274c34c, 0x539244af, 0x53e073b0, 0x5552427c, 0x55e49464, 0x55ea4832, 0x572e75fc, 0x59223e8a, 0x596cdd64, 0x5a838b8f, 0x5aedea9f, 0x5afeedf2, 0x5e44d412, 0x5f4ada89, 0x60679360, 0x622c00c9, 0x648ed6a9, 0x653d2dc2, 0x6559a72c, 0x663bb79b, 0x66d48d02, 0x68e249a0, 0x6994aaf3, 0x6a170855, 0x6c4bacc0, 0x71c9e9c0, 0x720a6faa, 0x7226e5ec, 0x7288e4e1, 0x73a019fa, 0x75645749, 0x757e0700, 0x76273762, 0x76eda730, 0x77ff5f06, 0x786e02f5, 0x7b78cc98, 0x7c721af8
	pattern10:	.word 0x00000384, 0x68e2890a, 0x770bfa15, 0x464f90a6, 0x65779931, 0x635cec92, 0x7bea0bd6, 0x7e77def4, 0x2e266c90, 0x2dc4c603, 0x2d024868, 0x6e2c1d8a, 0x04f1b691, 0x221f10bb, 0x096513ca, 0x54af7c14, 0x0d4e4056, 0x29660fb8, 0x079f90ca, 0x244e3890, 0x546a0309, 0x1c58fd39, 0x6b944bbc, 0x2c3a2923, 0x1609e33d, 0x5bfb6c55, 0x07349d09, 0x58a7eab1, 0x3c5d0e8c, 0x1e94d9f7, 0x410642ce, 0x0501dd18, 0x053c3dea, 0x55d32a24, 0x71132735, 0x6fd9aca4, 0x5836dac6, 0x15d26b0c, 0x572ab987, 0x3f957284, 0x3c7f3f6d, 0x75478094, 0x7edb8804, 0x33026ed5, 0x1b341dd6, 0x1419f36e, 0x7b912333, 0x2a9d6211, 0x420d76cd, 0x7f1a93c1, 0x217e3693, 0x1ce40179, 0x608f3077, 0x72241550, 0x3a81f4be, 0x09b06bd4, 0x6f2fb9cb, 0x10baca9e, 0x1187ef4c, 0x2e1d0736, 0x01d43531, 0x5d7eae96, 0x02ba2139, 0x68357f30, 0x16985755, 0x788b1538, 0x59e101d6, 0x263ad209, 0x1d103785, 0x2d77eb48, 0x320b50c0, 0x285bc616, 0x77d408f6, 0x63a0bce5, 0x4098e8bd, 0x76228132, 0x3923d1c4, 0x7aeb5f5a, 0x65c427f1, 0x49101b7d, 0x3da93b25, 0x703c2755, 0x68e9bceb, 0x1b7bf475, 0x1ab8eb37, 0x0efdb76d, 0x51608b43, 0x369aa47d, 0x5085f603, 0x354e18a0, 0x71d85c80, 0x0a08450f, 0x3152a0f4, 0x66808159, 0x36e5847f, 0x5519dfba, 0x4ad5ef41, 0x4d639894, 0x276b407f, 0x44bea2dd, 0x5fcee0c6, 0x7942c1a2, 0x768319c2, 0x121a4abf, 0x058f2e8d, 0x6782dde2, 0x7b72ed62, 0x16e374f5, 0x448b0768, 0x78c8425d, 0x054afd4b, 0x0e66c527, 0x6c15523e, 0x0ae589ba, 0x7d2513f0, 0x7cd05fc1, 0x3277b32a, 0x59e69ab1, 0x07a0bb5d, 0x7ffcb273, 0x07542ffe, 0x3f0590ec, 0x75ca8660, 0x0c2f3611, 0x73e77e64, 0x14af3519, 0x051939e7, 0x31f4326d, 0x624a3747, 0x7102c5e9, 0x34693031, 0x5d55a67c, 0x125a8e44, 0x651db43a, 0x117bf5d2, 0x46c66b96, 0x02286030, 0x4b1d6100, 0x03f883aa, 0x51501291, 0x5955fb75, 0x64a3b1ef, 0x0e70ba8f, 0x3c26ac10, 0x30dce7dd, 0x2daf4dc1, 0x0d81d6e9, 0x0891e1be, 0x5ed62b00, 0x2d199d52, 0x2c1dd325, 0x09e94afe, 0x3dc8ddb8, 0x38e0ce47, 0x1909d2b7, 0x393ca7fd, 0x04330276, 0x09c9576b, 0x5f00dd2c, 0x0f5c4735, 0x47f5b24f, 0x1ef3ec95, 0x2b3982d1, 0x6bf2dabe, 0x030ccb6d, 0x6a1e1493, 0x71e87961, 0x3100f9eb, 0x621458f6, 0x6cbfdad8, 0x505982e7, 0x333c0e1b, 0x1ba63d30, 0x7adcd052, 0x66d351d1, 0x56cc2d01, 0x11a1510a, 0x49ec1b26, 0x3e1600a3, 0x7052f6ff, 0x2fd33fe5, 0x15b3cdaa, 0x750d1bfe, 0x7a877b22, 0x0b71803a, 0x2b00dbab, 0x2c030817, 0x03db2e4f, 0x393ee9ae, 0x2c3831ce, 0x3d30ff70, 0x2c5e4b27, 0x66700f6b, 0x19367978, 0x3e5f8380, 0x535ea4d1, 0x15d051b6, 0x6e64156a, 0x33e3cad0, 0x7b81ba56, 0x61dad8d5, 0x17707596, 0x0ecbffb1, 0x7ae3bd06, 0x47c6278d, 0x5e3c49c0, 0x406dd2ad, 0x6cf0fc5e, 0x048f7dfb, 0x19560a69, 0x3b05995b, 0x4e796609, 0x0d1ac14d, 0x5f274d83, 0x1e294eb5, 0x51ca08c1, 0x45e9d8af, 0x10ea0dc2, 0x2201bb02, 0x4cc75d7b, 0x36cbadac, 0x574221a3, 0x11bdf1b7, 0x76647c88, 0x770c2438, 0x0608f1ed, 0x1231a505, 0x42726d75, 0x15f34437, 0x56d1cf74, 0x15612c29, 0x6e1cd9fb, 0x3ebe5efd, 0x54b6e508, 0x79e8d8ff, 0x77404d2d, 0x62446395, 0x7af0fbf9, 0x74b221f2, 0x1717ebba, 0x0d6a8f5f, 0x08e26fc3, 0x7de28104, 0x634cb493, 0x330ef7b6, 0x6d7d283a, 0x76b4553c, 0x6f435354, 0x69bb789d, 0x35c9d1a1, 0x68d46f9f, 0x5f94fae6, 0x224ca927, 0x1ada2dc1, 0x6f699136, 0x5688348e, 0x299b5496, 0x15d36ed1, 0x169dacbc, 0x790a84ad, 0x1d4a0698, 0x3044ebea, 0x7959a992, 0x680a801d, 0x1d1c302f, 0x382854df, 0x4465a407, 0x2147ecff, 0x7119c60d, 0x142d244d, 0x4c000112, 0x110bd5b4, 0x7de27709, 0x17953aad, 0x7466e55d, 0x2a79a2c5, 0x27eb66d3, 0x2daedb6a, 0x48ccd91b, 0x2b976942, 0x7706ef3d, 0x32fd3a45, 0x5d91a591, 0x551545e6, 0x5eefa9d7, 0x0bccc0d6, 0x3b9b91db, 0x0fb9c7d7, 0x5e268a50, 0x6406ad16, 0x2a726d97, 0x552b0595, 0x36f3e2db, 0x62d9883f, 0x73186507, 0x744ebb72, 0x5db76f7c, 0x4550e232, 0x4b19c129, 0x39bac7bb, 0x7670d141, 0x7400f8a5, 0x1d62d037, 0x7f88ae1c, 0x74cc1786, 0x27b6054e, 0x20f4eb7f, 0x5ce5c3f8, 0x389c80a9, 0x76fbc8da, 0x3e97b4ac, 0x23dfac59, 0x6a0efe56, 0x69d2acd6, 0x671b8d20, 0x3ad8dbc6, 0x7b088043, 0x395dd240, 0x5947112b, 0x76a202fa, 0x49ac1b6c, 0x22b3b925, 0x09340b29, 0x2ba2505e, 0x0a00baa5, 0x2d27687a, 0x28e514b9, 0x0a21aa88, 0x1a60277c, 0x3384b441, 0x074bcc1c, 0x1d6e742d, 0x68753f3d, 0x3faf1cdf, 0x0535068a, 0x51a1e4ac, 0x1912698c, 0x5340aecf, 0x117bf136, 0x1071cb13, 0x45134942, 0x1bfc3686, 0x00a55a6e, 0x6d2daeee, 0x0d01091c, 0x74c4b68e, 0x31b602ce, 0x2e2f5501, 0x342eb240, 0x298817d1, 0x43652c7a, 0x349c4911, 0x00bd9346, 0x28d6475a, 0x2542ac12, 0x4c8d3cba, 0x0bc9e45f, 0x14fc9c26, 0x48660a14, 0x5bc1bb1c, 0x475e4a5d, 0x72e132c2, 0x34647ef9, 0x3e26c25a, 0x51cb1ca2, 0x5aedb261, 0x0fa87edb, 0x2d1acb5d, 0x1f7afbcd, 0x757dd2fa, 0x355d1a64, 0x5d3ecdde, 0x7853e06b, 0x0eb89144, 0x313a1f3f, 0x53e38e79, 0x43722715, 0x7053ad72, 0x7955d1d8, 0x52416b4b, 0x3361b683, 0x5864d141, 0x388e00e5, 0x78369482, 0x3614ab42, 0x4f78c518, 0x7b29961c, 0x474c2558, 0x08b05bf1, 0x295e1200, 0x3be44722, 0x529755d0, 0x592d40cc, 0x73bb52ff, 0x13fd848c, 0x2f2ae4f4, 0x6c63846f, 0x47a00001, 0x6a982705, 0x3ca4ca76, 0x044d5e34, 0x53100622, 0x311332d4, 0x55527ec9, 0x32b4e310, 0x5c0a9ab4, 0x1a8c95fb, 0x62e345b5, 0x7ab8926b, 0x1ee20293, 0x1db05932, 0x6718610b, 0x1aeb7f85, 0x242e936f, 0x2f87d7c4, 0x1b2e1910, 0x28c4e780, 0x6539f38d, 0x2a690d03, 0x6d39564d, 0x38f64c7d, 0x0309e802, 0x2fb10b62, 0x680ab481, 0x45f21911, 0x7205b2ce, 0x6847f8b8, 0x20c02fbc, 0x118d3027, 0x40f6f217, 0x0619be94, 0x790b26e0, 0x3ba23949, 0x11c5037f, 0x60553ab7, 0x38591a10, 0x4218d880, 0x01891647, 0x7972744e, 0x5c506c24, 0x5eba6f19, 0x774f9980, 0x22fc2ce3, 0x0bdff3f0, 0x7a141a68, 0x42064b10, 0x6701e951, 0x59dbc0dd, 0x15f7c787, 0x2a24d532, 0x7a286bb4, 0x0e145c32, 0x141582a6, 0x7d54e326, 0x4f22776f, 0x6aa56746, 0x5193de1c, 0x3d424f0a, 0x7a3ac1b3, 0x6060b39b, 0x1b468b16, 0x2da5dd8f, 0x19e761b7, 0x7eeb0a7b, 0x4c1099ae, 0x7ec6ddf1, 0x6234a31c, 0x483e0a1c, 0x753e4132, 0x433c0ece, 0x7fb4c567, 0x672eb519, 0x32df178a, 0x6cea7f75, 0x1b6b3db8, 0x1e00e467, 0x3dd266bc, 0x35d3b782, 0x5f565c4e, 0x5d89d6a7, 0x2fca25ad, 0x01c12ccb, 0x5ed8711e, 0x3c3d907f, 0x2d3b6a4f, 0x05ea707f, 0x6f87e753, 0x2cda2ad4, 0x0329fd02, 0x386a1086, 0x4eac73b3, 0x504bc58f, 0x13dc3a45, 0x2b6953b5, 0x140c6655, 0x5ba4ebd9, 0x45c71ffb, 0x38b78250, 0x55bb94bc, 0x64d7b920, 0x45b1c732, 0x44dc56f0, 0x6f2bc53c, 0x4804d4e8, 0x7424f508, 0x7b3f2a4b, 0x6007b278, 0x7b3a2675, 0x001b6e9f, 0x713f0dff, 0x7f7e7e74, 0x4e5065f2, 0x1201a06a, 0x1cd44bf5, 0x4514d10f, 0x4e490aaf, 0x5c5e4048, 0x523d2f2d, 0x13d2a6b3, 0x4d0ce084, 0x6f977449, 0x39af64f8, 0x2ee2f68b, 0x0e1bd16b, 0x7aa71a97, 0x2924100e, 0x73bc5102, 0x5988cc51, 0x2c6035fd, 0x68aac61c, 0x335474c8, 0x2c95c869, 0x71cebce6, 0x71e23595, 0x560e52ec, 0x29f2bcdc, 0x246d059b, 0x10cb7576, 0x7014b575, 0x7d709dc4, 0x3698ef2a, 0x1d43d319, 0x35b1cf13, 0x3a1e585e, 0x7b1ad4d5, 0x7775d90e, 0x4d8dfce7, 0x3cc9017f, 0x598a2565, 0x6cfa4512, 0x6afe0acb, 0x5ed01ce3, 0x23f8f406, 0x1296a7ba, 0x4744d9e8, 0x061afc7e, 0x60b092d6, 0x2dd9d39a, 0x7fd1b786, 0x30b26afd, 0x5a9f78c5, 0x646c3ac5, 0x4d5a9304, 0x147c1a4a, 0x4a5430cb, 0x06679a63, 0x39a861ad, 0x69293135, 0x5a0e24bc, 0x696f9225, 0x669828a2, 0x55a41596, 0x2b2da0be, 0x13b161e6, 0x00c51fc3, 0x53175466, 0x4f2e7f27, 0x0d2460f0, 0x372b73e0, 0x1760ebe7, 0x0b21e488, 0x3020aeaa, 0x09500105, 0x7927750c, 0x6fd4d5ff, 0x48ad5022, 0x73af85d1, 0x71285e03, 0x2f97013a, 0x4fb30416, 0x4f9e0d8f, 0x4d4adcae, 0x706166ee, 0x2e02cdfe, 0x2c957cc5, 0x1a45802b, 0x7609930f, 0x1ed0ada2, 0x434a0326, 0x5d7618e1, 0x7516c0f1, 0x120e22db, 0x44c990c3, 0x36b984ba, 0x1219ceca, 0x016d2567, 0x215abb83, 0x4519423d, 0x4f4f903b, 0x5e5333e6, 0x0f24685d, 0x51af8a4f, 0x355b7086, 0x31247a48, 0x224268c4, 0x47a1cebb, 0x71d40fc7, 0x0c78dcd7, 0x25ef3363, 0x006b486f, 0x1848a3fd, 0x280176a5, 0x39d0bf17, 0x278bab3e, 0x74e1af40, 0x058de60c, 0x77caf80d, 0x524a21d5, 0x0cf4036b, 0x686ede75, 0x0b0c4ecc, 0x23890b70, 0x0e9bba42, 0x302e7481, 0x0c1b5513, 0x543ee152, 0x12edd51b, 0x47648d52, 0x4a3d5dae, 0x72db5d37, 0x254b51f2, 0x151d8df1, 0x17ac87df, 0x0ebe19d3, 0x3d59cb5b, 0x5bfa1a1b, 0x4f4c2d09, 0x25754caa, 0x08c97e56, 0x0188303a, 0x1789742a, 0x3afe07fd, 0x43322bc2, 0x5c69e935, 0x2fdce0f7, 0x5d59a880, 0x182f75f3, 0x14ccf512, 0x075ffd8a, 0x69c3fe7b, 0x265eb265, 0x02b57e79, 0x0e3e1332, 0x11b7de63, 0x12a29f42, 0x2fcd4a8d, 0x3d88ef05, 0x75f984ff, 0x3e1ea1e5, 0x77c1dbe9, 0x3ffce121, 0x39ff26f7, 0x6e6a7dbf, 0x5dd70c3e, 0x26325113, 0x682e02f7, 0x2b4f4a4d, 0x0b6e7d1b, 0x73d59044, 0x40d5dccc, 0x6b58fdc9, 0x2f8dd54e, 0x0df6743a, 0x5f55498f, 0x4fd7f79e, 0x09d36195, 0x52c43ab9, 0x4a538278, 0x4d070c22, 0x684d5a68, 0x06f32c77, 0x07109582, 0x3fa8cd65, 0x4aafa594, 0x29b27298, 0x7110f8dd, 0x1ee2c33e, 0x14342d7c, 0x51999dd8, 0x2fb76082, 0x175ca25a, 0x274ac2fa, 0x3a9e1ddd, 0x74110567, 0x4eabb6fe, 0x61911048, 0x432681b2, 0x4be6b8f9, 0x10870955, 0x36c7990e, 0x57d5ed2a, 0x58502d86, 0x7f89188a, 0x4e3ec0dd, 0x34bdb83b, 0x07a98000, 0x67359b98, 0x642948ca, 0x79eff78a, 0x32022d8e, 0x2c16dcf6, 0x29cb8dbf, 0x29437c20, 0x29b9c1ab, 0x5c1a6570, 0x466253b8, 0x7f358c91, 0x589b2ce7, 0x09ff82c5, 0x5de98bc8, 0x596f2e5d, 0x0afd486f, 0x435ca095, 0x33928c18, 0x6bea0816, 0x19d4d52f, 0x259b5868, 0x017d9768, 0x5b6de928, 0x6797cb95, 0x7975db05, 0x2b89be54, 0x7e0f712d, 0x46d58d22, 0x270aed3f, 0x445b47fe, 0x2fff6d48, 0x31d58fc2, 0x0307de30, 0x6e7e072a, 0x6539fe27, 0x54d249a8, 0x472af77a, 0x08b76792, 0x328a0b0f, 0x4232352e, 0x5cff03fd, 0x0c33b1f5, 0x0d7863ef, 0x0f3a3f98, 0x434c202f, 0x0a65ea2a, 0x66c866ae, 0x59f90ec0, 0x301c0bde, 0x31a06d7b, 0x2b57dd87, 0x6437de52, 0x1c31c8ae, 0x573febae, 0x1be7fde3, 0x4d58fb7d, 0x063c1a74, 0x06f87015, 0x75506fc1, 0x4d7d070f, 0x3fb2bd19, 0x3b75d6ad, 0x55e6f65d, 0x38f0177f, 0x3a3f0752, 0x12649dd8, 0x43f68d72, 0x77a6fa60, 0x06da36ac, 0x034bfa55, 0x582c7af5, 0x17ca4065, 0x30663cef, 0x7ca33919, 0x7349dd94, 0x15f68bf8, 0x26f8ce75, 0x08d59ac0, 0x40a30e3f, 0x3c5afedf, 0x75e730b3, 0x675a7e06, 0x2f5cadd7, 0x48ae8869, 0x2148970c, 0x47086be5, 0x7d188072, 0x0a6d1a99, 0x095ecf83, 0x41e337d6, 0x3fa4fdc9, 0x47ce74d6, 0x68e044f1, 0x7414df65, 0x0525c332, 0x4f0a8622, 0x7c6e8af4, 0x0d2dfc4d, 0x3c789bc1, 0x2f12a682, 0x421934a4, 0x2c93bd21, 0x49210525, 0x44c8f137, 0x24f37605, 0x53c1983a, 0x2b110627, 0x2e7fb7fd, 0x1b020609, 0x3eef9e14, 0x40949844, 0x7fd0d150, 0x1b5f8db2, 0x33d5c2c1, 0x0ee471b6, 0x17c8a370, 0x6a012770, 0x4f71c35a, 0x0897b5d3, 0x57db8f45, 0x20dbfb43, 0x593baf0f, 0x1eb6c792, 0x2cd5b469, 0x057d5f8c, 0x1a2821f1, 0x201ff4d7, 0x4a694181, 0x0e5e4c89, 0x6d15071f, 0x6f989fd1, 0x28b1f97c, 0x6f8e52ab, 0x1e81aed9, 0x1cf1b14e, 0x40196a95, 0x4caac3b3, 0x7af86187, 0x558db59c, 0x29084cc3, 0x1d0a59a8, 0x07bb1cbd, 0x48dd01ad, 0x04d069f8, 0x7a94ee63, 0x34121958, 0x59de8bd7, 0x2b28758a, 0x35ac1bdb, 0x5ee90bab, 0x5419fe0d, 0x24c5c4f1, 0x6adf13f1, 0x4a417a1a, 0x02fd88af, 0x370cc40d, 0x35614d32, 0x0359be63, 0x7fe146e0, 0x70f2f030, 0x77f24e41, 0x5d958bc5, 0x6fa5ec8f, 0x72794e6e, 0x095461e2, 0x2e70b2d3, 0x22efb448, 0x7ae923ad, 0x4cd8c298, 0x3289e1a3, 0x4a06025b, 0x08efb877, 0x1cd8886a, 0x5f96b3f5, 0x5775910a, 0x7bc71048, 0x27fd5a9c, 0x3469a4be, 0x3d1d3627, 0x3a9a601e, 0x4473a03f, 0x225d984d, 0x053d6b28, 0x6f15289e, 0x0d4a7247
	answer10: 	.word 0x001b6e9f, 0x006b486f, 0x00a55a6e, 0x00bd9346, 0x00c51fc3, 0x016d2567, 0x017d9768, 0x0188303a, 0x01891647, 0x01c12ccb, 0x01d43531, 0x02286030, 0x02b57e79, 0x02ba2139, 0x02fd88af, 0x0307de30, 0x0309e802, 0x030ccb6d, 0x0329fd02, 0x034bfa55, 0x0359be63, 0x03db2e4f, 0x03f883aa, 0x04330276, 0x044d5e34, 0x048f7dfb, 0x04d069f8, 0x04f1b691, 0x0501dd18, 0x051939e7, 0x0525c332, 0x0535068a, 0x053c3dea, 0x053d6b28, 0x054afd4b, 0x057d5f8c, 0x058de60c, 0x058f2e8d, 0x05ea707f, 0x0608f1ed, 0x0619be94, 0x061afc7e, 0x063c1a74, 0x06679a63, 0x06da36ac, 0x06f32c77, 0x06f87015, 0x07109582, 0x07349d09, 0x074bcc1c, 0x07542ffe, 0x075ffd8a, 0x079f90ca, 0x07a0bb5d, 0x07a98000, 0x07bb1cbd, 0x0891e1be, 0x0897b5d3, 0x08b05bf1, 0x08b76792, 0x08c97e56, 0x08d59ac0, 0x08e26fc3, 0x08efb877, 0x09340b29, 0x09500105, 0x095461e2, 0x095ecf83, 0x096513ca, 0x09b06bd4, 0x09c9576b, 0x09d36195, 0x09e94afe, 0x09ff82c5, 0x0a00baa5, 0x0a08450f, 0x0a21aa88, 0x0a65ea2a, 0x0a6d1a99, 0x0ae589ba, 0x0afd486f, 0x0b0c4ecc, 0x0b21e488, 0x0b6e7d1b, 0x0b71803a, 0x0bc9e45f, 0x0bccc0d6, 0x0bdff3f0, 0x0c1b5513, 0x0c2f3611, 0x0c33b1f5, 0x0c78dcd7, 0x0cf4036b, 0x0d01091c, 0x0d1ac14d, 0x0d2460f0, 0x0d2dfc4d, 0x0d4a7247, 0x0d4e4056, 0x0d6a8f5f, 0x0d7863ef, 0x0d81d6e9, 0x0df6743a, 0x0e145c32, 0x0e1bd16b, 0x0e3e1332, 0x0e5e4c89, 0x0e66c527, 0x0e70ba8f, 0x0e9bba42, 0x0eb89144, 0x0ebe19d3, 0x0ecbffb1, 0x0ee471b6, 0x0efdb76d, 0x0f24685d, 0x0f3a3f98, 0x0f5c4735, 0x0fa87edb, 0x0fb9c7d7, 0x1071cb13, 0x10870955, 0x10baca9e, 0x10cb7576, 0x10ea0dc2, 0x110bd5b4, 0x117bf136, 0x117bf5d2, 0x1187ef4c, 0x118d3027, 0x11a1510a, 0x11b7de63, 0x11bdf1b7, 0x11c5037f, 0x1201a06a, 0x120e22db, 0x1219ceca, 0x121a4abf, 0x1231a505, 0x125a8e44, 0x12649dd8, 0x1296a7ba, 0x12a29f42, 0x12edd51b, 0x13b161e6, 0x13d2a6b3, 0x13dc3a45, 0x13fd848c, 0x140c6655, 0x141582a6, 0x1419f36e, 0x142d244d, 0x14342d7c, 0x147c1a4a, 0x14af3519, 0x14ccf512, 0x14fc9c26, 0x151d8df1, 0x15612c29, 0x15b3cdaa, 0x15d051b6, 0x15d26b0c, 0x15d36ed1, 0x15f34437, 0x15f68bf8, 0x15f7c787, 0x1609e33d, 0x16985755, 0x169dacbc, 0x16e374f5, 0x1717ebba, 0x175ca25a, 0x1760ebe7, 0x17707596, 0x1789742a, 0x17953aad, 0x17ac87df, 0x17c8a370, 0x17ca4065, 0x182f75f3, 0x1848a3fd, 0x1909d2b7, 0x1912698c, 0x19367978, 0x19560a69, 0x19d4d52f, 0x19e761b7, 0x1a2821f1, 0x1a45802b, 0x1a60277c, 0x1a8c95fb, 0x1ab8eb37, 0x1ada2dc1, 0x1aeb7f85, 0x1b020609, 0x1b2e1910, 0x1b341dd6, 0x1b468b16, 0x1b5f8db2, 0x1b6b3db8, 0x1b7bf475, 0x1ba63d30, 0x1be7fde3, 0x1bfc3686, 0x1c31c8ae, 0x1c58fd39, 0x1cd44bf5, 0x1cd8886a, 0x1ce40179, 0x1cf1b14e, 0x1d0a59a8, 0x1d103785, 0x1d1c302f, 0x1d43d319, 0x1d4a0698, 0x1d62d037, 0x1d6e742d, 0x1db05932, 0x1e00e467, 0x1e294eb5, 0x1e81aed9, 0x1e94d9f7, 0x1eb6c792, 0x1ed0ada2, 0x1ee20293, 0x1ee2c33e, 0x1ef3ec95, 0x1f7afbcd, 0x201ff4d7, 0x20c02fbc, 0x20dbfb43, 0x20f4eb7f, 0x2147ecff, 0x2148970c, 0x215abb83, 0x217e3693, 0x2201bb02, 0x221f10bb, 0x224268c4, 0x224ca927, 0x225d984d, 0x22b3b925, 0x22efb448, 0x22fc2ce3, 0x23890b70, 0x23dfac59, 0x23f8f406, 0x242e936f, 0x244e3890, 0x246d059b, 0x24c5c4f1, 0x24f37605, 0x2542ac12, 0x254b51f2, 0x25754caa, 0x259b5868, 0x25ef3363, 0x26325113, 0x263ad209, 0x265eb265, 0x26f8ce75, 0x270aed3f, 0x274ac2fa, 0x276b407f, 0x278bab3e, 0x27b6054e, 0x27eb66d3, 0x27fd5a9c, 0x280176a5, 0x285bc616, 0x28b1f97c, 0x28c4e780, 0x28d6475a, 0x28e514b9, 0x29084cc3, 0x2924100e, 0x29437c20, 0x295e1200, 0x29660fb8, 0x298817d1, 0x299b5496, 0x29b27298, 0x29b9c1ab, 0x29cb8dbf, 0x29f2bcdc, 0x2a24d532, 0x2a690d03, 0x2a726d97, 0x2a79a2c5, 0x2a9d6211, 0x2b00dbab, 0x2b110627, 0x2b28758a, 0x2b2da0be, 0x2b3982d1, 0x2b4f4a4d, 0x2b57dd87, 0x2b6953b5, 0x2b89be54, 0x2b976942, 0x2ba2505e, 0x2c030817, 0x2c16dcf6, 0x2c1dd325, 0x2c3831ce, 0x2c3a2923, 0x2c5e4b27, 0x2c6035fd, 0x2c93bd21, 0x2c957cc5, 0x2c95c869, 0x2cd5b469, 0x2cda2ad4, 0x2d024868, 0x2d199d52, 0x2d1acb5d, 0x2d27687a, 0x2d3b6a4f, 0x2d77eb48, 0x2da5dd8f, 0x2daedb6a, 0x2daf4dc1, 0x2dc4c603, 0x2dd9d39a, 0x2e02cdfe, 0x2e1d0736, 0x2e266c90, 0x2e2f5501, 0x2e70b2d3, 0x2e7fb7fd, 0x2ee2f68b, 0x2f12a682, 0x2f2ae4f4, 0x2f5cadd7, 0x2f87d7c4, 0x2f8dd54e, 0x2f97013a, 0x2fb10b62, 0x2fb76082, 0x2fca25ad, 0x2fcd4a8d, 0x2fd33fe5, 0x2fdce0f7, 0x2fff6d48, 0x301c0bde, 0x3020aeaa, 0x302e7481, 0x3044ebea, 0x30663cef, 0x30b26afd, 0x30dce7dd, 0x3100f9eb, 0x311332d4, 0x31247a48, 0x313a1f3f, 0x3152a0f4, 0x31a06d7b, 0x31b602ce, 0x31d58fc2, 0x31f4326d, 0x32022d8e, 0x320b50c0, 0x3277b32a, 0x3289e1a3, 0x328a0b0f, 0x32b4e310, 0x32df178a, 0x32fd3a45, 0x33026ed5, 0x330ef7b6, 0x333c0e1b, 0x335474c8, 0x3361b683, 0x3384b441, 0x33928c18, 0x33d5c2c1, 0x33e3cad0, 0x34121958, 0x342eb240, 0x34647ef9, 0x34693031, 0x3469a4be, 0x349c4911, 0x34bdb83b, 0x354e18a0, 0x355b7086, 0x355d1a64, 0x35614d32, 0x35ac1bdb, 0x35b1cf13, 0x35c9d1a1, 0x35d3b782, 0x3614ab42, 0x3698ef2a, 0x369aa47d, 0x36b984ba, 0x36c7990e, 0x36cbadac, 0x36e5847f, 0x36f3e2db, 0x370cc40d, 0x372b73e0, 0x382854df, 0x38591a10, 0x386a1086, 0x388e00e5, 0x389c80a9, 0x38b78250, 0x38e0ce47, 0x38f0177f, 0x38f64c7d, 0x3923d1c4, 0x393ca7fd, 0x393ee9ae, 0x395dd240, 0x39a861ad, 0x39af64f8, 0x39bac7bb, 0x39d0bf17, 0x39ff26f7, 0x3a1e585e, 0x3a3f0752, 0x3a81f4be, 0x3a9a601e, 0x3a9e1ddd, 0x3ad8dbc6, 0x3afe07fd, 0x3b05995b, 0x3b75d6ad, 0x3b9b91db, 0x3ba23949, 0x3be44722, 0x3c26ac10, 0x3c3d907f, 0x3c5afedf, 0x3c5d0e8c, 0x3c789bc1, 0x3c7f3f6d, 0x3ca4ca76, 0x3cc9017f, 0x3d1d3627, 0x3d30ff70, 0x3d424f0a, 0x3d59cb5b, 0x3d88ef05, 0x3da93b25, 0x3dc8ddb8, 0x3dd266bc, 0x3e1600a3, 0x3e1ea1e5, 0x3e26c25a, 0x3e5f8380, 0x3e97b4ac, 0x3ebe5efd, 0x3eef9e14, 0x3f0590ec, 0x3f957284, 0x3fa4fdc9, 0x3fa8cd65, 0x3faf1cdf, 0x3fb2bd19, 0x3ffce121, 0x40196a95, 0x406dd2ad, 0x40949844, 0x4098e8bd, 0x40a30e3f, 0x40d5dccc, 0x40f6f217, 0x410642ce, 0x41e337d6, 0x42064b10, 0x420d76cd, 0x4218d880, 0x421934a4, 0x4232352e, 0x42726d75, 0x432681b2, 0x43322bc2, 0x433c0ece, 0x434a0326, 0x434c202f, 0x435ca095, 0x43652c7a, 0x43722715, 0x43f68d72, 0x445b47fe, 0x4465a407, 0x4473a03f, 0x448b0768, 0x44bea2dd, 0x44c8f137, 0x44c990c3, 0x44dc56f0, 0x45134942, 0x4514d10f, 0x4519423d, 0x4550e232, 0x45b1c732, 0x45c71ffb, 0x45e9d8af, 0x45f21911, 0x464f90a6, 0x466253b8, 0x46c66b96, 0x46d58d22, 0x47086be5, 0x472af77a, 0x4744d9e8, 0x474c2558, 0x475e4a5d, 0x47648d52, 0x47a00001, 0x47a1cebb, 0x47c6278d, 0x47ce74d6, 0x47f5b24f, 0x4804d4e8, 0x483e0a1c, 0x48660a14, 0x48ad5022, 0x48ae8869, 0x48ccd91b, 0x48dd01ad, 0x49101b7d, 0x49210525, 0x49ac1b6c, 0x49ec1b26, 0x4a06025b, 0x4a3d5dae, 0x4a417a1a, 0x4a538278, 0x4a5430cb, 0x4a694181, 0x4aafa594, 0x4ad5ef41, 0x4b19c129, 0x4b1d6100, 0x4be6b8f9, 0x4c000112, 0x4c1099ae, 0x4c8d3cba, 0x4caac3b3, 0x4cc75d7b, 0x4cd8c298, 0x4d070c22, 0x4d0ce084, 0x4d4adcae, 0x4d58fb7d, 0x4d5a9304, 0x4d639894, 0x4d7d070f, 0x4d8dfce7, 0x4e3ec0dd, 0x4e490aaf, 0x4e5065f2, 0x4e796609, 0x4eabb6fe, 0x4eac73b3, 0x4f0a8622, 0x4f22776f, 0x4f2e7f27, 0x4f4c2d09, 0x4f4f903b, 0x4f71c35a, 0x4f78c518, 0x4f9e0d8f, 0x4fb30416, 0x4fd7f79e, 0x504bc58f, 0x505982e7, 0x5085f603, 0x51501291, 0x51608b43, 0x5193de1c, 0x51999dd8, 0x51a1e4ac, 0x51af8a4f, 0x51ca08c1, 0x51cb1ca2, 0x523d2f2d, 0x52416b4b, 0x524a21d5, 0x529755d0, 0x52c43ab9, 0x53100622, 0x53175466, 0x5340aecf, 0x535ea4d1, 0x53c1983a, 0x53e38e79, 0x5419fe0d, 0x543ee152, 0x546a0309, 0x54af7c14, 0x54b6e508, 0x54d249a8, 0x551545e6, 0x5519dfba, 0x552b0595, 0x55527ec9, 0x558db59c, 0x55a41596, 0x55bb94bc, 0x55d32a24, 0x55e6f65d, 0x560e52ec, 0x5688348e, 0x56cc2d01, 0x56d1cf74, 0x572ab987, 0x573febae, 0x574221a3, 0x5775910a, 0x57d5ed2a, 0x57db8f45, 0x582c7af5, 0x5836dac6, 0x58502d86, 0x5864d141, 0x589b2ce7, 0x58a7eab1, 0x592d40cc, 0x593baf0f, 0x5947112b, 0x5955fb75, 0x596f2e5d, 0x5988cc51, 0x598a2565, 0x59dbc0dd, 0x59de8bd7, 0x59e101d6, 0x59e69ab1, 0x59f90ec0, 0x5a0e24bc, 0x5a9f78c5, 0x5aedb261, 0x5b6de928, 0x5ba4ebd9, 0x5bc1bb1c, 0x5bfa1a1b, 0x5bfb6c55, 0x5c0a9ab4, 0x5c1a6570, 0x5c506c24, 0x5c5e4048, 0x5c69e935, 0x5ce5c3f8, 0x5cff03fd, 0x5d3ecdde, 0x5d55a67c, 0x5d59a880, 0x5d7618e1, 0x5d7eae96, 0x5d89d6a7, 0x5d91a591, 0x5d958bc5, 0x5db76f7c, 0x5dd70c3e, 0x5de98bc8, 0x5e268a50, 0x5e3c49c0, 0x5e5333e6, 0x5eba6f19, 0x5ed01ce3, 0x5ed62b00, 0x5ed8711e, 0x5ee90bab, 0x5eefa9d7, 0x5f00dd2c, 0x5f274d83, 0x5f55498f, 0x5f565c4e, 0x5f94fae6, 0x5f96b3f5, 0x5fcee0c6, 0x6007b278, 0x60553ab7, 0x6060b39b, 0x608f3077, 0x60b092d6, 0x61911048, 0x61dad8d5, 0x621458f6, 0x6234a31c, 0x62446395, 0x624a3747, 0x62d9883f, 0x62e345b5, 0x634cb493, 0x635cec92, 0x63a0bce5, 0x6406ad16, 0x642948ca, 0x6437de52, 0x646c3ac5, 0x64a3b1ef, 0x64d7b920, 0x651db43a, 0x6539f38d, 0x6539fe27, 0x65779931, 0x65c427f1, 0x66700f6b, 0x66808159, 0x669828a2, 0x66c866ae, 0x66d351d1, 0x6701e951, 0x6718610b, 0x671b8d20, 0x672eb519, 0x67359b98, 0x675a7e06, 0x6782dde2, 0x6797cb95, 0x680a801d, 0x680ab481, 0x682e02f7, 0x68357f30, 0x6847f8b8, 0x684d5a68, 0x686ede75, 0x68753f3d, 0x68aac61c, 0x68d46f9f, 0x68e044f1, 0x68e2890a, 0x68e9bceb, 0x69293135, 0x696f9225, 0x69bb789d, 0x69c3fe7b, 0x69d2acd6, 0x6a012770, 0x6a0efe56, 0x6a1e1493, 0x6a982705, 0x6aa56746, 0x6adf13f1, 0x6afe0acb, 0x6b58fdc9, 0x6b944bbc, 0x6bea0816, 0x6bf2dabe, 0x6c15523e, 0x6c63846f, 0x6cbfdad8, 0x6cea7f75, 0x6cf0fc5e, 0x6cfa4512, 0x6d15071f, 0x6d2daeee, 0x6d39564d, 0x6d7d283a, 0x6e1cd9fb, 0x6e2c1d8a, 0x6e64156a, 0x6e6a7dbf, 0x6e7e072a, 0x6f15289e, 0x6f2bc53c, 0x6f2fb9cb, 0x6f435354, 0x6f699136, 0x6f87e753, 0x6f8e52ab, 0x6f977449, 0x6f989fd1, 0x6fa5ec8f, 0x6fd4d5ff, 0x6fd9aca4, 0x7014b575, 0x703c2755, 0x7052f6ff, 0x7053ad72, 0x706166ee, 0x70f2f030, 0x7102c5e9, 0x7110f8dd, 0x71132735, 0x7119c60d, 0x71285e03, 0x713f0dff, 0x71cebce6, 0x71d40fc7, 0x71d85c80, 0x71e23595, 0x71e87961, 0x7205b2ce, 0x72241550, 0x72794e6e, 0x72db5d37, 0x72e132c2, 0x73186507, 0x7349dd94, 0x73af85d1, 0x73bb52ff, 0x73bc5102, 0x73d59044, 0x73e77e64, 0x7400f8a5, 0x74110567, 0x7414df65, 0x7424f508, 0x744ebb72, 0x7466e55d, 0x74b221f2, 0x74c4b68e, 0x74cc1786, 0x74e1af40, 0x750d1bfe, 0x7516c0f1, 0x753e4132, 0x75478094, 0x75506fc1, 0x757dd2fa, 0x75ca8660, 0x75e730b3, 0x75f984ff, 0x7609930f, 0x76228132, 0x76647c88, 0x7670d141, 0x768319c2, 0x76a202fa, 0x76b4553c, 0x76fbc8da, 0x7706ef3d, 0x770bfa15, 0x770c2438, 0x77404d2d, 0x774f9980, 0x7775d90e, 0x77a6fa60, 0x77c1dbe9, 0x77caf80d, 0x77d408f6, 0x77f24e41, 0x78369482, 0x7853e06b, 0x788b1538, 0x78c8425d, 0x790a84ad, 0x790b26e0, 0x7927750c, 0x7942c1a2, 0x7955d1d8, 0x7959a992, 0x7972744e, 0x7975db05, 0x79e8d8ff, 0x79eff78a, 0x7a141a68, 0x7a286bb4, 0x7a3ac1b3, 0x7a877b22, 0x7a94ee63, 0x7aa71a97, 0x7ab8926b, 0x7adcd052, 0x7ae3bd06, 0x7ae923ad, 0x7aeb5f5a, 0x7af0fbf9, 0x7af86187, 0x7b088043, 0x7b1ad4d5, 0x7b29961c, 0x7b3a2675, 0x7b3f2a4b, 0x7b72ed62, 0x7b81ba56, 0x7b912333, 0x7bc71048, 0x7bea0bd6, 0x7c6e8af4, 0x7ca33919, 0x7cd05fc1, 0x7d188072, 0x7d2513f0, 0x7d54e326, 0x7d709dc4, 0x7de27709, 0x7de28104, 0x7e0f712d, 0x7e77def4, 0x7ec6ddf1, 0x7edb8804, 0x7eeb0a7b, 0x7f1a93c1, 0x7f358c91, 0x7f7e7e74, 0x7f88ae1c, 0x7f89188a, 0x7fb4c567, 0x7fd0d150, 0x7fd1b786, 0x7fe146e0, 0x7ffcb273

.text
.globl main
.globl sort_func

main:

	# pattern : n, arr[0], arr[1], ... arr[n-1]
	# answer  : arr[0], arr[1], ... arr[n-1]

	# pattern 1
	la, $t0, pattern1
	lw   $a1, 0($t0)	# move argument n into $a1
	addi $s0, $t0, 4	# calculate array pointer
	move $a0, $s0		# move array pointer into $a0
	jal sort_func
	move $a0, $s0		# move array pointer into $a0
	la, $t0, pattern1
	lw   $a1, 0($t0)	# move argument n into $a1
	la, $a2, answer1	# move answer array pointer into $a2
	la  $a3, test1_msg	# move msg pointer into $a3
	jal verify
	
	# pattern 2
	la, $t0, pattern2
	lw   $a1, 0($t0)	# move argument n into $a1
	addi $s0, $t0, 4	# calculate array pointer
	move $a0, $s0		# move array pointer into $a0
	jal sort_func
	move $a0, $s0		# move array pointer into $a0
	la, $t0, pattern2
	lw   $a1, 0($t0)	# move argument n into $a1
	la, $a2, answer2	# move answer array pointer into $a2
	la  $a3, test2_msg	# move msg pointer into $a3
	jal verify
	
	# pattern 3
	la, $t0, pattern3
	lw   $a1, 0($t0)	# move argument n into $a1
	addi $s0, $t0, 4	# calculate array pointer
	move $a0, $s0		# move array pointer into $a0
	jal sort_func
	move $a0, $s0		# move array pointer into $a0
	la, $t0, pattern3
	lw   $a1, 0($t0)	# move argument n into $a1
	la, $a2, answer3	# move answer array pointer into $a2
	la  $a3, test3_msg	# move msg pointer into $a3
	jal verify
	
	# pattern 4
	la, $t0, pattern4
	lw   $a1, 0($t0)	# move argument n into $a1
	addi $s0, $t0, 4	# calculate array pointer
	move $a0, $s0		# move array pointer into $a0
	jal sort_func
	move $a0, $s0		# move array pointer into $a0
	la, $t0, pattern4
	lw   $a1, 0($t0)	# move argument n into $a1
	la, $a2, answer4	# move answer array pointer into $a2
	la  $a3, test4_msg	# move msg pointer into $a3
	jal verify
	
	# pattern 5
	la, $t0, pattern5
	lw   $a1, 0($t0)	# move argument n into $a1
	addi $s0, $t0, 4	# calculate array pointer
	move $a0, $s0		# move array pointer into $a0
	jal sort_func
	move $a0, $s0		# move array pointer into $a0
	la, $t0, pattern5
	lw   $a1, 0($t0)	# move argument n into $a1
	la, $a2, answer5	# move answer array pointer into $a2
	la  $a3, test5_msg	# move msg pointer into $a3
	jal verify
	
	# pattern 6
	la, $t0, pattern6
	lw   $a1, 0($t0)	# move argument n into $a1
	addi $s0, $t0, 4	# calculate array pointer
	move $a0, $s0		# move array pointer into $a0
	jal sort_func
	move $a0, $s0		# move array pointer into $a0
	la, $t0, pattern6
	lw   $a1, 0($t0)	# move argument n into $a1
	la, $a2, answer6	# move answer array pointer into $a2
	la  $a3, test6_msg	# move msg pointer into $a3
	jal verify
	
	# pattern 7
	la, $t0, pattern7
	lw   $a1, 0($t0)	# move argument n into $a1
	addi $s0, $t0, 4	# calculate array pointer
	move $a0, $s0		# move array pointer into $a0
	jal sort_func
	move $a0, $s0		# move array pointer into $a0
	la, $t0, pattern7
	lw   $a1, 0($t0)	# move argument n into $a1
	la, $a2, answer7	# move answer array pointer into $a2
	la  $a3, test7_msg	# move msg pointer into $a3
	jal verify
	
	# pattern 8
	la, $t0, pattern8
	lw   $a1, 0($t0)	# move argument n into $a1
	addi $s0, $t0, 4	# calculate array pointer
	move $a0, $s0		# move array pointer into $a0
	jal sort_func
	move $a0, $s0		# move array pointer into $a0
	la, $t0, pattern8
	lw   $a1, 0($t0)	# move argument n into $a1
	la, $a2, answer8	# move answer array pointer into $a2
	la  $a3, test8_msg	# move msg pointer into $a3
	jal verify
	
	# pattern 9
	la, $t0, pattern9
	lw   $a1, 0($t0)	# move argument n into $a1
	addi $s0, $t0, 4	# calculate array pointer
	move $a0, $s0		# move array pointer into $a0
	jal sort_func
	move $a0, $s0		# move array pointer into $a0
	la, $t0, pattern9
	lw   $a1, 0($t0)	# move argument n into $a1
	la, $a2, answer9	# move answer array pointer into $a2
	la  $a3, test9_msg	# move msg pointer into $a3
	jal verify

	# pattern 10
	la, $t0, pattern10
	lw   $a1, 0($t0)	# move argument n into $a1
	addi $s0, $t0, 4	# calculate array pointer
	move $a0, $s0		# move array pointer into $a0
	jal sort_func
	move $a0, $s0		# move array pointer into $a0
	la, $t0, pattern10
	lw   $a1, 0($t0)	# move argument n into $a1
	la, $a2, answer10	# move answer array pointer into $a2
	la  $a3, test10_msg	# move msg pointer into $a3
	jal verify
	
	j all_pass	
	
all_pass:
	la $a0, allpass_msg   
	jal print_str
	j end
    
try_again:
	la $a0, tryagain_msg
	jal print_str
    
end:
    li $v0, 10
    syscall
    
print_str:
    li $v0, 4
    syscall
    jr $ra

# verify function
# a0 : array pointer
# a1 : n
# a2 : answer pointer
# a3 : print_str
#
# t0 : condition
# t1 : i
# t2 : index
# t3 : current array index
# t4 : current answer index
# t5 : value of array
# t6 : value of answer
verify:
	addi $sp, $sp, -20	# make room on stack for 5 registers
	sw	 $ra, 16($sp)	# save $ra on stack
	sw	 $s3, 12($sp)	# save $s3 on stack
	sw	 $s2, 8($sp)	# save $s2 on stack
	sw	 $s1, 4($sp)	# save $s1 on stack
	sw	 $s0, 0($sp)	# save $s0 on stack
    move $t1, $zero		# i = 0
forloop:
	slt  $t0, $t1, $a1  # $t0 = 0 if (i >= n) 
	beq  $t0, $zero, exit_verify # go to exit_verify if (i >= n)
	sll  $t2, $t1, 2	# $t2 = i * 4
	add  $t3, $a0, $t2  # address of array[i]
	add  $t4, $a2, $t2  # address of answer[i]
	lw   $t5, 0($t3)	# load array[i]
	lw   $t6, 0($t4)	# load answer[i]
	bne	 $t5, $t6, try_again # go to try_again if (array[i] != answer[i]) 
	addi $t1, $t1, 1	# i = i + 1
	j 	 forloop
exit_verify:
	# print pass info
	addi $sp, $sp, -4	# make room on stack for $a0
	sw	 $a0, 0($sp)	# save $a0 on stack
	move $a0, $a3		# move print_str to $a0
	jal  print_str
	lw	 $a0, 0($sp)	# restore $a0 from stack
	addi $sp, $sp, 4	# restore stack pointer
	#
	lw	 $ra, 16($sp)	# restore $ra on stack
	lw	 $s3, 12($sp)	# restore $s3 on stack
	lw	 $s2, 8($sp)	# restore $s2 on stack
	lw	 $s1, 4($sp)	# restore $s1 on stack
	lw	 $s0, 0($sp)	# restore $s0 on stack
	addi $sp, $sp, 20	# restore stack pointer
	jr	 $ra


########################################################################
sort_func:
	addi $sp, $sp, -20	# make room on stack for 5 registers
	sw	 $ra, 16($sp)	# save $ra on stack
	sw	 $s3, 12($sp)	# save $s3 on stack
	sw	 $s2, 8($sp)	# save $s2 on stack
	sw	 $s1, 4($sp)	# save $s1 on stack
	sw	 $s0, 0($sp)	# save $s0 on stack
sort:
	move $s2, $a0		# save the array pointer into $s2
	move $s3, $a1		# save argument n into $s3
	move $s0, $zero		# i = 0
for1:
	slt  $t0, $s0, $s3	# $t0 = 0 if (i >= n)
	beq  $t0, $zero, exit1 	# go to exit1 if (i >= n)
	addi $s1, $s0, -1	# $j = i - 1
for2:
	slt  $t0, $s1, $zero 	# $t0 = 1 if (j < 0)
	bne  $t0, $zero, exit2 	# go to exit2 if (j < 0)
	sll  $t1, $s1, 2	# $t1 = j * 4
	add  $t2, $t1, $a0 	# $t2 = v + (j * 4)
	lw   $t3, 0($t2)	# load v[j]
	lw   $t4, 4($t2)	# load v[j+1]
	slt  $t5, $t4, $t3	# $t5 = 0 if (v[j+1] >= v[j])
	beq  $t5, $zero, exit2 	# go to exit2 if (v[j+1] >= v[j])
	move $a0, $s2 		# move array pointer to $a0
	move $a1, $s1 		# move j to $a0
	jal  swap			# call swap function
	addi $s1, $s1, -1	# j = j - 1
	j  	 for2			# jump to for2
exit2:
	addi $s0, $s0, 1	# i = i + 1
	j 	 for1			# jump to for1
exit1:
	lw	 $ra, 16($sp)	# restore $ra on stack
	lw	 $s3, 12($sp)	# restore $s3 on stack
	lw	 $s2, 8($sp)	# restore $s2 on stack
	lw	 $s1, 4($sp)	# restore $s1 on stack
	lw	 $s0, 0($sp)	# restore $s0 on stack
	addi $sp, $sp, 20	# restore stack pointer
	jr	 $ra

swap:
	sll	 $t0, $a1, 2	# $t0 = j * 4
	add  $t0, $t0, $a0 	# $t0 = v + (j * 4)
						# address of v[k]
	lw 	 $t1, 0($t0)	# $t1 (temp) = v[k]
	lw 	 $t2, 4($t0)	# $t2 = v[k+1]
	sw 	 $t2, 0($t0)	# v[k] = $t2 (v[k+1])
	sw 	 $t1, 4($t0)	# v[k+1] = $t1 (temp)
	jr   $ra			# return

########################################################################
